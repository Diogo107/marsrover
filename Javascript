// Rover Object Goes Here
// ======================




// ======================
var rover = {direction: 'N', 
             x: 0,
             y: 0,  
             travelLog: []
}


function turnLeft (direction) {
  switch (rover.direction){
    case 'N' :
      rover.direction = 'W';
      console.log(rover.direction);
      break;
    case 'W' :
      rover.direction = 'S';
      console.log(rover.direction);
      break;
     case 'S' :
      rover.direction = 'E';
      console.log(rover.direction);
      break;
     case 'E' :
      rover.direction = 'N';
      console.log(rover.direction);
      break;
  }
}

function turnRight (direction) {
  switch (rover.direction){
    case 'N' :
      rover.direction = 'E';
      console.log(rover.direction);
      break;
    case 'W' :
      rover.direction = 'N';
      console.log(rover.direction);
      break;
     case 'S' :
      rover.direction = 'W';
      console.log(rover.direction);
      break;
     case 'E' :
      rover.direction = 'S';
      console.log(rover.direction);
      break;
  }
}

function moveFoward (direction){
  switch(rover.direction){
       case 'N' :
         rover.y -= 1;
         rover.travelLog.push([rover.x, rover.y]);
         break;
       case 'W' :
         rover.x -= 1;
         rover.travelLog.push([rover.x, rover.y]);
         break;
       case 'S' :
         rover.y += 1;
         rover.travelLog.push([rover.x, rover.y]);
         break;
       case 'E' :
         rover.x += 1;
         rover.travelLog.push([rover.x, rover.y]);
         break;
         }
}

var string = "rffrfflfrff"

for(i=0; i<string.length; i++){
  string.charAt(i)
  switch(string.charAt(i)){
    case 'f':
      moveFoward()
      break;
    case 'r':
      turnRight()
      break;
    case 'l':
      turnLeft()
      break;
  }
}

console.log(rover.travelLog)